"""
Django settings for root project.

Generated by 'django-admin startproject' using Django 4.0.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

import os
from pathlib import Path
import environ
from django.contrib.messages import constants as messages
from django.core.management.utils import get_random_secret_key

environ.Env.read_env('.env')


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = get_random_secret_key()

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(int(os.getenv('DEBUG', '0')))

ALLOWED_HOSTS = ['127.0.0.1', '0.0.0.0', 'meucontato.app.br', '3.19.142.221',  'meucontato.pythonanywhere.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'usuarios.apps.UsuariosConfig',
    'core.apps.CoreConfig',
    'cards.apps.CardsConfig',
    'compras.apps.ComprasConfig',
    # 'debug_toolbar',
    'django_extensions',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'django.middleware.locale.LocaleMiddleware',
    # 'debug_toolbar.middleware.DebugToolbarMiddleware',
]

ROOT_URLCONF = 'root.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'root.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases
if bool(int(os.getenv('DATABASE_LOCAL', '1'))):
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.getenv('POSTGRES_DB'),
            'USER': os.getenv('POSTGRES_USER'),
            'PASSWORD': os.getenv('POSTGRES_PASSWORD'),
            'HOST': os.getenv('DB_HOST', 'postgresql'),  # tem que ser o nome do servi√ßo no container
            'PORT': os.getenv('DB_PORT', '5432'),
        }
    }


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_TZ = False

# THOUSAND_SEPARATOR = '.'
# DECIMAL_SEPARATOR = ','
# USE_THOUSAND_SEPARATOR = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

AUTH_USER_MODEL = 'usuarios.Usuario'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MESSAGE_TAGS = {
    messages.ERROR: 'danger'
}

LOGIN_URL = 'usuarios:login'
# LOGIN_REDIRECT_URL = 'usuarios:dashboard'
LOGOUT_REDIRECT_URL = 'core:home'

GOOGLE_APPLICATION_CREDENTIALS = os.environ.get('GOOGLE_APPLICATION_CREDENTIALS',"")

EMAIL_BACKEND='django.core.mail.backends.smtp.EmailBackend'
# EMAIL_USE_SSL=env('EMAIL_USE_SSL')
EMAIL_USE_TLS=os.environ.get('EMAIL_USE_TLS',"")
EMAIL_HOST=os.environ.get('EMAIL_HOST',"")
EMAIL_HOST_USER=os.environ.get('EMAIL_HOST_USER',"")
EMAIL_HOST_PASSWORD=os.environ.get('EMAIL_HOST_PASSWORD',"")
EMAIL_PORT=os.environ.get('EMAIL_PORT',"")
DEFAULT_FROM_EMAIL=os.environ.get('DEFAULT_FROM_EMAIL',"")

# MERCADO PAGO
MERCADOPAGO_PUBLIC_KEY=os.environ.get('MERCADOPAGO_PUBLIC_KEY')
MERCADOPAGO_PUBLIC_KEY_RELATORIO=os.environ.get('MERCADOPAGO_PUBLIC_KEY_RELATORIO')
MERCADOPAGO_ACCESS_TOKEN=os.environ.get('MERCADOPAGO_ACCESS_TOKEN')
MERCADOPAGO_ACCESS_TOKEN_RELATORIO=os.environ.get('MERCADOPAGO_ACCESS_TOKEN_RELATORIO')

INTERNAL_IPS = [
  '127.0.0.1'
]

# django-extensions graph models para criar PNG da modelagem
# comando: python manage.py graph_models --arrow-shape normal -o models.png
# GRAPH_MODELS = {
#   'all_applications': False,
#   'group_models': True,
#   'app_labels': ["cards", "usuarios", "core"],
#   'exclude_models': ['AbstractUser', 'Permission', 'Group']
# }

CSRF_TRUSTED_ORIGINS = [
    'http://127.0.0.1:8000',
    'https://meucontato.app.br',
    'http://meucontato.app.br',
    'https://meucontato.app.br:8000',
    'http://meucontato.app.br:8000',
]

SECURE_SSL_REDIRECT = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True

SECURE_SSL_REDIRECT = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True

