# Define o número de processos trabalhadores que o servidor Nginx deve utilizar para lidar com as solicitações. 
worker_processes auto;

events {
    # Define o número máximo de conexões simultâneas que cada processo de trabalho pode manipular
    worker_connections  1024;
}

http {
    # Inclui o arquivo mime.types, que contém as associações de tipos MIME usadas para mapear as extensões de arquivo para os tipos MIME correspondentes.
    include mime.types; 
    # Desativa a exibição dos tokens de servidor no cabeçalho HTTP Server.
    server_tokens off;
    # Define o conjunto de caracteres padrão para UTF-8, que é amplamente utilizado na web
    charset utf-8;
    # Ativa o uso da chamada de sistema sendfile para servir arquivos estáticos
    sendfile on;
    # Define o tamanho máximo do corpo da solicitação que o servidor Nginx irá aceitar
    client_max_body_size 50M;

    # Define um grupo de servidores para balanceamento de carga. Neste caso, o grupo contato contém apenas um servidor django na porta 8000
    upstream contato {
        server django:8000;
    }

    # Inicia a configuração de um bloco de servidor para lidar com solicitações HTTP na porta 80 (HTTP) e redirecionar para HTTPS
    server {
        # Define os endereços e portas nos quais o servidor irá escutar conexões HTTP
        listen 80;
        listen [::]:80;
        # Habilita o suporte ao HTTP/2 para este servidor
        http2 on;
        # Define o nome do servidor
        server_name meucontato.app.br;

        # Define o local e o formato do arquivo de log de acesso.
        access_log /etc/nginx_access.log;
        # Define o local e o nível de detalhe do arquivo de log de erro
        error_log /etc/nginx_error.log debug;

        # Configura uma diretiva de localização para redirecionar todas as solicitações HTTP para HTTPS
        location / {        
            return 301 https://meucontato.app.br$request_uri;
        }

        # location / {
        #     proxy_pass http://contato;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        # }

        # location ~ /.well-known/acme-challenge/ {
        #     root /var/www/certbot;
        # }
    }

    server {
        listen 443 default_server ssl;
        listen [::]:443 ssl; 
        http2 on;
        server_name meucontato.app.br;

        access_log /etc/nginx_access.log;
        error_log /etc/nginx_error.log debug;

        # Configuração de headers de segurança
        # add_header X-Content-Type-Options "nosniff";
        # add_header X-Frame-Options "SAMEORIGIN";
        # add_header Content-Security-Policy "default-src 'self'";

        # Especificam os caminhos para os certificados SSL.
        ssl_certificate /etc/letsencrypt/live/meucontato.app.br/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/meucontato.app.br/privkey.pem;

        # Configura as diretivas para proxy reverso para o servidor Django.
        location / {
            # Todas as solicitações que chegam à raiz do servidor NGINX serão enviadas para o servidor backend localizado em http://contato
            proxy_pass http://contato;
            proxy_pass_request_headers on;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Server-IP $server_addr;
            proxy_set_header X-Server-Port $server_port;
            proxy_set_header X-Client-IP $remote_addr;
            proxy_set_header X-Client-Port $remote_port;
            proxy_redirect off;
            proxy_connect_timeout 120s;
            proxy_read_timeout 120s;
        }

        # Define o local para o desafio de verificação de posse de domínio para o Let's Encrypt
        location ~ /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Configurações para servir arquivos estáticos
        location /static/ {
            autoindex off;
            alias /contato/static/;
            expires 30d;
        }

        # Configurações para servir arquivos estáticos
        location /media/ {
            autoindex off;
            alias /contato/media/;
            expires 30d;
        }
    }

    server {
        listen 8000 ssl;
        listen [::]:8000 ssl;
        http2 on;
        server_name meucontato.app.br;

        access_log /etc/nginx_access.log;
        error_log /etc/nginx_error.log debug;

        # Configuração de headers de segurança
        # add_header X-Content-Type-Options "nosniff";
        # add_header X-Frame-Options "SAMEORIGIN";
        # add_header Content-Security-Policy "default-src 'self'";

        ssl_certificate /etc/letsencrypt/live/meucontato.app.br/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/meucontato.app.br/privkey.pem;

        location / {
            proxy_pass http://contato;
            proxy_pass_request_headers on;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Server-IP $server_addr;
            proxy_set_header X-Server-Port $server_port;
            proxy_set_header X-Client-IP $remote_addr;
            proxy_set_header X-Client-Port $remote_port;
            proxy_redirect off;
            proxy_connect_timeout 120s;
            proxy_read_timeout 120s;
        }

        location /static/ {
            autoindex off;
            alias /contato/static/;
            expires 30d;
        }

        location /media/ {
            autoindex off;
            alias /contato/media/;
            expires 30d;
        }

    }

}
